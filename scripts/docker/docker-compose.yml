# Use root/example as user/password credentials
version: '3.1'

services:

  db:
    image: "${MYSQL_VER}"
    ports:
      - 3306:3306
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MAG_PWD}
      - MYSQL_DATABASE=${MAG_DB_NAME}
      - MYSQL_USER=${MAG_UNAME}
      - MYSQL_PASSWORD=${MAG_PWD}
    volumes:
      - /opt/app/db_hd:/var/lib/mysql
    networks:
      - magento2-network      
      
  adminer:
    image: adminer
    ports:
      - 8080:8080
    restart: always
    networks:
      - magento2-network

  redis:
    image: redis
    ports:
     - 6379
    restart: always
    networks:
      - magento2-network

  redis-session:
    image: redis
    ports:
     - 6379
    restart: always
    networks:
      - magento2-network
      
  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    restart: always
    networks:
      - magento2-network
      
  elasticsearch:
    image: "${ES_VER}"
    environment:
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    restart: always
    networks:
      - magento2-network
    volumes:
      - /opt/app/data01:/usr/share/elasticsearch/data
  
  php:
    build:
    # build from Dockerfile
      context: .
      dockerfile: "Dockerfile${MAG_VER}"
    ports:
      - 80:80
    restart: always
    networks:
      - magento2-network
    volumes:
      - /opt/app/html:/var/www/html
      - /opt/app/apache2:/var/log/apache2
      
networks:
  magento2-network:
    driver: bridge

